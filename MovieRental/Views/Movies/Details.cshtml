@model MovieRental.Models.Movie

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
    <script type="text/javascript" src="~/Scripts/jquery-2.1.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var movie = @Html.Raw(Json.Encode(Model.Title))
            $.getJSON("http://www.omdbapi.com/?t=" + movie + "&tomatoes=true&type=movie", function (json) {
                $("#review").html("Movie not found");
                if (json["Response"] == "True") {
                    $("#review").html(
                        "IMDB Rating - " + json["imdbRating"] + "<br>" +
                        "IMDB Votes - " + json["imdbVotes"] + "<br>" +
                        "TomatoMeter - " + json["tomatoMeter"] + "%<br>" +
                        "Tomato Avg Rate - " + json["tomatoRating"] + "/10<br>" +
                        "Tomato Fresh/Rotten - " + json["tomatoFresh"] + "/" + json["tomatoRotten"] + "<br>" +
                        "Tomato User Meter - " + json["tomatoUserMeter"] + "%<br>" +
                        "Tomato User Avg Rate - " + json["tomatoUserRating"] + "/5<br>" +
                        "Tomato User Revies Count - " + json["tomatoUserReviews"] + "<br>" +
                        "Tomato Desc - " + json["tomatoConsensus"]
                    );
                }
            });
        });
    </script>
</head>
<body>
    <div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Genre.Name)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Genre.Name)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.ReleaseDate)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Director)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Director)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>
    
            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.TrailerUrl)
            </dt>
            <dd>
                @if (Model.TrailerUrl == null)
                {
                    <div>No trailer available</div>
                }
                else { 
                <a href="@Url.Content(Model.TrailerUrl)" target=" _blank"> Watch </a>
                }
            </dd>
    
            <dt>
                @Html.DisplayNameFor(model => model.ArtUrl)
            </dt>
    
            <dd>
                @if (Model.ArtUrl == null || !File.Exists(Server.MapPath(Model.ArtUrl)))
                {
                    <div>No art available</div>
                }
                else
                {
                    <img class="rotatepic" src="@Url.Content(Model.ArtUrl)" width="100" height="100" />
                }

            </dd>
    
            <dt>
                Review API
            </dt>
            <dd>
                <section id="review">

                </section>
            </dd>
        </dl>
    </div>
    <p>
        @Html.ActionLink("Order", "Create", "Orders", new { id = Model.MovieId }, new { @class = "btn btn-success" }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
</body>
</html>
